### YamlMime:PythonClass
uid: azure.core.polling.base_polling.LROBasePolling
name: LROBasePolling
fullName: azure.core.polling.base_polling.LROBasePolling
module: azure.core.polling.base_polling
summary: 'A base LRO poller.


  This assumes a basic flow:

  - I analyze the response to decide the polling approach

  - I poll

  - I ask the final resource depending of the polling approach


  If your polling need are more specific, you could implement a PollingMethod directly'
constructor:
  syntax: 'LROBasePolling(timeout: float = 30, lro_algorithms: Sequence[LongRunningOperation[HttpRequestTypeVar,
    AllHttpResponseTypeVar]] | None = None, lro_options: Dict[str, Any] | None = None,
    path_format_arguments: Dict[str, str] | None = None, **operation_config: Any)'
  parameters:
  - name: timeout
    defaultValue: '30'
  - name: lro_algorithms
    defaultValue: None
  - name: lro_options
    defaultValue: None
  - name: path_format_arguments
    defaultValue: None
methods:
- uid: azure.core.polling.base_polling.LROBasePolling.finished
  name: finished
  summary: Is this polling finished?
  signature: finished() -> bool
  return:
    description: True if finished, False otherwise.
    types:
    - <xref:bool>
- uid: azure.core.polling.base_polling.LROBasePolling.from_continuation_token
  name: from_continuation_token
  summary: Recreate the poller from a continuation token.
  signature: 'from_continuation_token(continuation_token: str, **kwargs: Any) -> Tuple[Any,
    Any, Callable[[Any], PollingReturnType_co]]'
  parameters:
  - name: continuation_token
    description: The continuation token to recreate the poller.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: A tuple containing the client, the initial response, and the deserialization
      callback.
    types:
    - <xref:tuple>[<xref:azure.core.PipelineClient>, <xref:azure.core.pipeline.PipelineResponse>,
      <xref:callable>]
  exceptions:
  - type: ValueError
    description: 'If the continuation token is invalid or if ''client'' or

      ''deserialization_callback'' are not provided.'
- uid: azure.core.polling.base_polling.LROBasePolling.get_continuation_token
  name: get_continuation_token
  summary: 'Get a continuation token that can be used to recreate this poller.

    The continuation token is a base64 encoded string that contains the initial response

    serialized with pickle.'
  signature: get_continuation_token() -> str
  return:
    description: The continuation token.
    types:
    - <xref:str>
  exceptions:
  - type: ValueError
    description: If the initial response is not set.
- uid: azure.core.polling.base_polling.LROBasePolling.initialize
  name: initialize
  summary: Set the initial status of this LRO.
  signature: 'initialize(client: PipelineClientType, initial_response: PipelineResponse[HttpRequestTypeVar,
    AllHttpResponseTypeVar], deserialization_callback: Callable[[PipelineResponse[HttpRequestTypeVar,
    AllHttpResponseTypeVar]], PollingReturnType_co]) -> None'
  parameters:
  - name: client
    description: The Azure Core Pipeline client used to make request.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineClient>
  - name: initial_response
    description: The initial response for the call.
    isRequired: true
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
  - name: deserialization_callback
    description: A callback function to deserialize the final response.
    isRequired: true
    types:
    - <xref:callable>
  exceptions:
  - type: azure.core.HttpResponseError
    description: If initial status is incorrect LRO state
- uid: azure.core.polling.base_polling.LROBasePolling.request_status
  name: request_status
  summary: 'Do a simple GET to this status link.


    This method re-inject ''x-ms-client-request-id''.'
  signature: 'request_status(status_link: str) -> PipelineResponse[HttpRequestTypeVar,
    HttpResponseTypeVar]'
  parameters:
  - name: status_link
    description: The URL to poll.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The response of the status request.
    types:
    - <xref:azure.core.pipeline.PipelineResponse>
- uid: azure.core.polling.base_polling.LROBasePolling.resource
  name: resource
  summary: Return the built resource.
  signature: resource() -> PollingReturnType_co
  return:
    description: The built resource.
    types:
    - <xref:any>
- uid: azure.core.polling.base_polling.LROBasePolling.run
  name: run
  signature: run() -> None
- uid: azure.core.polling.base_polling.LROBasePolling.status
  name: status
  summary: Return the current status as a string.
  signature: status() -> str
  return:
    description: The current status.
    types:
    - <xref:str>
- uid: azure.core.polling.base_polling.LROBasePolling.update_status
  name: update_status
  summary: Update the current status of the LRO.
  signature: update_status() -> None
