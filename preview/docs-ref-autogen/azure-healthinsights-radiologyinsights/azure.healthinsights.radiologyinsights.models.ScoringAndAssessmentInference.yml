### YamlMime:PythonClass
uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference
name: ScoringAndAssessmentInference
fullName: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference
module: azure.healthinsights.radiologyinsights.models
summary: 'Identifies and highlights Risk, Scoring, Assessment and Classifications
  and correspondent

  values dictated in a report, e.g. ''BIRADS 5''.'
constructor:
  syntax: 'ScoringAndAssessmentInference(*args: Any, **kwargs: Any)'
variables:
- description: Additional Content defined by implementations.
  name: extension
  types:
  - <xref:list>[<xref:azure.healthinsights.radiologyinsights.models.Extension>]
- description: Inference type. Required. Scoring and assessment inference type
  name: kind
  types:
  - <xref:str>
  - <xref:azure.healthinsights.radiologyinsights.models.SCORING_AND_ASSESSMENT>
- description: 'Category, e.g. BIRADS. Required. Known values are: "BIRADS", "C-RADS
    COLONIC

    FINDINGS", "CAD-RADS", "LI-RADS", "LUNG-RADS", "NI-RADS", "O-RADS", "PI-RADS",
    "TI-RADS",

    "C-RADS EXTRACOLONIC FINDINGS", "LIFETIME BREAST CANCER RISK", "ASCVD RISK", "MODIFIED
    GAIL

    MODEL RISK", "TYRER CUSICK MODEL RISK", "AGATSTON SCORE", "10 YEAR CHD RISK",
    "Z-SCORE",

    "T-SCORE", "CALCIUM VOLUME SCORE", "US LI-RADS VISUALIZATION SCORE", "US LI-RADS",
    "CEUS

    LI-RADS", "TREATMENT RESPONSE LI-RADS", "O-RADS MRI", "CALCIUM MASS SCORE", "RISK
    OF MALIGNANCY

    INDEX", "HNPCC MUTATION RISK", "ALBERTA STROKE PROGRAM EARLY CT SCORE", "KELLGREN-LAWRENCE

    GRADING SCALE", "TONNIS CLASSIFICATION", "CALCIUM SCORE (UNSPECIFIED)", "10 YEAR
    CHD RISK

    (OBSERVED AGE)", "10 YEAR CHD RISK (ARTERIAL AGE)", and "FRAX SCORE".'
  name: category
  types:
  - <xref:str>
  - <xref:azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentCategoryType>
- description: 'The expansion of the category (which is an abbreviation.).

    Required.'
  name: category_description
  types:
  - <xref:str>
- description: The value. If the value is a range, use field rangeValue.
  name: single_value
  types:
  - <xref:str>
- description: The range.
  name: range_value
  types:
  - <xref:azure.healthinsights.radiologyinsights.models.AssessmentValueRange>
methods:
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.copy
  name: copy
  signature: copy() -> Model
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.category
  name: category
  summary: '"BIRADS", "C-RADS COLONIC FINDINGS",

    "CAD-RADS", "LI-RADS", "LUNG-RADS", "NI-RADS", "O-RADS", "PI-RADS", "TI-RADS",

    "C-RADS EXTRACOLONIC FINDINGS", "LIFETIME BREAST CANCER RISK", "ASCVD RISK", "MODIFIED

    GAIL MODEL RISK", "TYRER CUSICK MODEL RISK", "AGATSTON SCORE", "10 YEAR CHD RISK",

    "Z-SCORE", "T-SCORE", "CALCIUM VOLUME SCORE", "US LI-RADS VISUALIZATION SCORE",
    "US

    LI-RADS", "CEUS LI-RADS", "TREATMENT RESPONSE LI-RADS", "O-RADS MRI", "CALCIUM
    MASS

    SCORE", "RISK OF MALIGNANCY INDEX", "HNPCC MUTATION RISK", "ALBERTA STROKE PROGRAM
    EARLY

    CT SCORE", "KELLGREN-LAWRENCE GRADING SCALE", "TONNIS CLASSIFICATION", "CALCIUM
    SCORE

    (UNSPECIFIED)", "10 YEAR CHD RISK (OBSERVED AGE)", "10 YEAR CHD RISK (ARTERIAL
    AGE)", and

    "FRAX SCORE".'
  signature: 'category: str | _models.ScoringAndAssessmentCategoryType'
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.category_description
  name: category_description
  summary: The expansion of the category (which is an abbreviation.). Required.
  signature: 'category_description: str'
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.extension
  name: extension
  summary: Additional Content defined by implementations.
  signature: 'extension: List[''_models.Extension''] | None'
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.kind
  name: kind
  summary: Inference type. Required. Scoring and assessment inference type
  signature: 'kind: SCORING_AND_ASSESSMENT: ''scoringAndAssessment''>]'
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.range_value
  name: range_value
  summary: The range.
  signature: 'range_value: _models.AssessmentValueRange | None'
- uid: azure.healthinsights.radiologyinsights.models.ScoringAndAssessmentInference.single_value
  name: single_value
  summary: The value. If the value is a range, use field rangeValue.
  signature: 'single_value: str | None'
