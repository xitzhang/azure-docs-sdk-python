### YamlMime:PythonClass
uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference
name: FollowupRecommendationInference
fullName: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference
module: azure.healthinsights.radiologyinsights.models
summary: 'Follow-up recommendations offer guidance to healthcare providers on managing
  and monitoring

  patients based on the findings of imaging studies.'
constructor:
  syntax: 'FollowupRecommendationInference(*args: Any, **kwargs: Any)'
variables:
- description: Additional Content defined by implementations.
  name: extension
  types:
  - <xref:list>[<xref:azure.healthinsights.radiologyinsights.models.Extension>]
- description: Inference type. Required. Recommendation inference type
  name: kind
  types:
  - <xref:str>
  - <xref:azure.healthinsights.radiologyinsights.models.FOLLOWUP_RECOMMENDATION>
- description: 'Date and time are displayed when the procedure is recommended to be
    done at

    a specific point in time.'
  name: effective_at
  types:
  - <xref:str>
- description: 'The period is shown if a specific period is mentioned, with a start
    and

    end date-time.'
  name: effective_period
  types:
  - <xref:azure.healthinsights.radiologyinsights.models.Period>
- description: Findings related to the recommendation.
  name: findings
  types:
  - <xref:list>[<xref:azure.healthinsights.radiologyinsights.models.RecommendationFinding>]
- description: 'The conditional value indicates whether or not the sentence containing

    the recommendation includes a conditional statement. Keywords for conditional
    statements

    include ''if'', ''when'', ''unless'', and so on. Required.'
  name: is_conditional
  types:
  - <xref:bool>
- description: 'The option value indicates whether or not the sentence containing
    the

    recommendation includes an optional statement. Keywords for optional statements
    include

    ''recommend'', ''consider'', and so on. Required.'
  name: is_option
  types:
  - <xref:bool>
- description: 'The guideline value indicates whether or not the recommendation is
    part of

    a guideline section that compiles all recommendations applicable to various findings.
    Required.'
  name: is_guideline
  types:
  - <xref:bool>
- description: 'Hedging refers to ambiguous, vague or imprecise language within the
    sentence

    of the recommendation. Keywords for hedging are ''can be'',''may be'',and so on.
    Required.'
  name: is_hedging
  types:
  - <xref:bool>
- description: 'The procedure recommendation can be a generic procedure or an

    imaging procedure. Required.'
  name: recommended_procedure
  types:
  - <xref:azure.healthinsights.radiologyinsights.models.ProcedureRecommendation>
methods:
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.copy
  name: copy
  signature: copy() -> Model
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.effective_at
  name: effective_at
  summary: 'Date and time are displayed when the procedure is recommended to be done
    at a specific point in

    time.'
  signature: 'effective_at: str | None'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.effective_period
  name: effective_period
  summary: The period is shown if a specific period is mentioned, with a start and
    end date-time.
  signature: 'effective_period: _models.Period | None'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.extension
  name: extension
  summary: Additional Content defined by implementations.
  signature: 'extension: List[''_models.Extension''] | None'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.findings
  name: findings
  summary: Findings related to the recommendation.
  signature: 'findings: List[_models.RecommendationFinding] | None'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.is_conditional
  name: is_conditional
  summary: 'The conditional value indicates whether or not the sentence containing
    the recommendation

    includes a conditional statement. Keywords for conditional statements include
    ''if'', ''when'',

    ''unless'', and so on. Required.'
  signature: 'is_conditional: bool'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.is_guideline
  name: is_guideline
  summary: 'The guideline value indicates whether or not the recommendation is part
    of a guideline section

    that compiles all recommendations applicable to various findings. Required.'
  signature: 'is_guideline: bool'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.is_hedging
  name: is_hedging
  summary: 'Hedging refers to ambiguous, vague or imprecise language within the sentence
    of the

    recommendation. Keywords for hedging are ''can be'',''may be'',and so on. Required.'
  signature: 'is_hedging: bool'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.is_option
  name: is_option
  summary: 'The option value indicates whether or not the sentence containing the
    recommendation includes

    an optional statement. Keywords for optional statements include ''recommend'',
    ''consider'', and so

    on. Required.'
  signature: 'is_option: bool'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.kind
  name: kind
  summary: Inference type. Required. Recommendation inference type
  signature: 'kind: FOLLOWUP_RECOMMENDATION: ''followupRecommendation''>]'
- uid: azure.healthinsights.radiologyinsights.models.FollowupRecommendationInference.recommended_procedure
  name: recommended_procedure
  summary: The procedure recommendation can be a generic procedure or an imaging procedure.
    Required.
  signature: 'recommended_procedure: _models.ProcedureRecommendation'
