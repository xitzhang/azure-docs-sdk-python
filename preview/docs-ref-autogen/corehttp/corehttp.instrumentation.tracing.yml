### YamlMime:PythonPackage
uid: corehttp.instrumentation.tracing
name: tracing
fullName: corehttp.instrumentation.tracing
type: import
functions:
- uid: corehttp.instrumentation.tracing.distributed_trace
  name: distributed_trace
  summary: 'Decorator to apply to an SDK method to have it traced automatically.


    Span will use the method''s qualified name.


    Note: This decorator SHOULD NOT be used by application developers. It''s intended
    to be called by client

    libraries only. Application developers should use OpenTelemetry directly to instrument
    their applications.'
  signature: 'distributed_trace(__func: Callable[[P], T] | None = None, **kwargs:
    Any) -> Any'
  parameters:
  - name: __func
    description: A function to decorate
    defaultValue: None
    types:
    - <xref:callable>
  return:
    description: The decorated function
    types:
    - <xref:typing.Any>
- uid: corehttp.instrumentation.tracing.distributed_trace_async
  name: distributed_trace_async
  summary: 'Decorator to apply to an SDK method to have it traced automatically.


    Span will use the method''s qualified name.


    Note: This decorator SHOULD NOT be used by application developers. It''s intended
    to be called by client

    libraries only. Application developers should use OpenTelemetry directly to instrument
    their applications.'
  signature: 'distributed_trace_async(__func: Callable[[P], Awaitable[T]] | None =
    None, **kwargs: Any) -> Any'
  parameters:
  - name: __func
    description: A function to decorate
    defaultValue: None
    types:
    - <xref:callable>
  return:
    description: The decorated function
    types:
    - <xref:typing.Any>
classes:
- corehttp.instrumentation.tracing.Link
- corehttp.instrumentation.tracing.TracingOptions
modules:
- corehttp.instrumentation.tracing.utils
enums:
- corehttp.instrumentation.tracing.SpanKind
