### YamlMime:PythonPackage
uid: corehttp.instrumentation
name: instrumentation
fullName: corehttp.instrumentation
type: import
functions:
- uid: corehttp.instrumentation.get_tracer
  name: get_tracer
  summary: 'Get the OpenTelemetry tracer instance if available.


    If OpenTelemetry is not available, this method will return None. This method caches

    the tracer instance for each unique set of parameters.'
  signature: 'get_tracer(*, library_name: str | None = None, library_version: str
    | None = None, schema_url: str | None = None, attributes: Mapping[str, str | bool
    | int | float] | None = None) -> OpenTelemetryTracer | None'
  keywordOnlyParameters:
  - name: library_name
    description: The name of the library to use in the tracer.
    defaultValue: None
    types:
    - <xref:str>
  - name: library_version
    description: The version of the library to use in the tracer.
    defaultValue: None
    types:
    - <xref:str>
  - name: schema_url
    description: Specifies the Schema URL of the emitted spans.
    defaultValue: None
    types:
    - <xref:str>
  - name: attributes
    description: Attributes to add to the emitted spans.
    defaultValue: None
    types:
    - <xref:typing.Mapping>[<xref:str>, <xref:typing.Union>[<xref:str>, <xref:bool>,
      <xref:int>, <xref:float>]]
  return:
    description: The OpenTelemetry tracer instance if available.
    types:
    - <xref:typing.Optional>[<xref:corehttp.instrumentation.tracing.opentelemetry.OpenTelemetryTracer>]
packages:
- corehttp.instrumentation.tracing
